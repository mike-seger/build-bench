name: Cross-Version

on:
  push:
    branches:
      - main
      - 'releases/*'
  pull_request:
    branches:
      - '*'

env:
  ORG_GRADLE_PROJECT_junitBuildCacheUsername: ${{ secrets.BUILD_CACHE_USERNAME }}
  ORG_GRADLE_PROJECT_junitBuildCachePassword: ${{ secrets.BUILD_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}

jobs:
  openjdk:
    strategy:
      matrix:
        jdk: [17]
    name: "OpenJDK ${{ matrix.jdk }}"
    runs-on: ubuntu-latest
    container: "ghcr.io/junit-team/build:${{ matrix.jdk }}"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            /root/.gradle/caches/
            /root/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: /root/.m2/repository
          key: test-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            test-${{ runner.os }}-maven-
      - name: Test
        env:
          ORG_GRADLE_PROJECT_enableTestDistribution: true
        run: |
          ./gradlew --version
          ./gradlew javaToolchains -Porg.gradle.java.installations.auto-download=false
          ./gradlew --no-parallel -Dplatform.tooling.support.tests.enabled=true -PjavaToolchainVersion=${{ matrix.jdk }} -Porg.gradle.java.installations.auto-download=false build "-Dscan.tag.JDK_${{ matrix.jdk }}"
      - name: Upload Test Distribution trace files
        uses: actions/upload-artifact@v2
        with:
          name: Test Distribution trace files
          path: '**/build/test-results/*/trace.json'
