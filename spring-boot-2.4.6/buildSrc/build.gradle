plugins {
	id "java-gradle-plugin"
	id "io.spring.javaformat" version "${javaFormatVersion}"
}

repositories {
	mavenCentral()
	gradlePluginPortal()
	maven { url "https://repo.spring.io/release" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	implementation("com.fasterxml.jackson.core:jackson-databind:2.11.4")
	implementation("commons-codec:commons-codec:1.13")
	implementation("org.apache.maven:maven-embedder:3.6.2")
	implementation("org.asciidoctor:asciidoctor-gradle-jvm:3.0.0")
	implementation("org.asciidoctor:asciidoctor-gradle-jvm-pdf:3.0.0")
	implementation("org.gradle:test-retry-gradle-plugin:1.1.9")
	implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31")
	implementation("org.jetbrains.kotlin:kotlin-compiler-embeddable:1.4.31")
	implementation("org.springframework:spring-core:5.2.2.RELEASE")
	implementation("org.springframework:spring-web:5.2.2.RELEASE")
	implementation("io.spring.javaformat:spring-javaformat-gradle-plugin:${javaFormatVersion}")
	testImplementation("org.assertj:assertj-core:3.11.1")
	testImplementation("org.apache.logging.log4j:log4j-core:2.12.1")
	testImplementation("org.junit.jupiter:junit-jupiter:5.6.0")
}

gradlePlugin {
	plugins {
		annotationProcessorPlugin {
			id = "org.springframework.boot.annotation-processor"
			implementationClass = "org.springframework.boot.build.processors.AnnotationProcessorPlugin"
		}
		autoConfigurationPlugin {
			id = "org.springframework.boot.auto-configuration"
			implementationClass = "org.springframework.boot.build.autoconfigure.AutoConfigurationPlugin"
		}
		bomPlugin {
			id = "org.springframework.boot.bom"
			implementationClass = "org.springframework.boot.build.bom.BomPlugin"
		}
		configurationPropertiesPlugin {
			id = "org.springframework.boot.configuration-properties"
			implementationClass = "org.springframework.boot.build.context.properties.ConfigurationPropertiesPlugin"
		}
		conventionsPlugin {
			id = "org.springframework.boot.conventions"
			implementationClass = "org.springframework.boot.build.ConventionsPlugin"
		}
		deployedPlugin {
			id = "org.springframework.boot.deployed"
			implementationClass = "org.springframework.boot.build.DeployedPlugin"
		}
		integrationTestPlugin {
			id = "org.springframework.boot.integration-test"
			implementationClass = "org.springframework.boot.build.test.IntegrationTestPlugin"
		}
		mavenPluginPlugin {
			id = "org.springframework.boot.maven-plugin"
			implementationClass = "org.springframework.boot.build.mavenplugin.MavenPluginPlugin"
		}
		mavenRepositoryPlugin {
			id = "org.springframework.boot.maven-repository"
			implementationClass = "org.springframework.boot.build.MavenRepositoryPlugin"
		}
		optionalDependenciesPlugin {
			id = "org.springframework.boot.optional-dependencies"
			implementationClass = "org.springframework.boot.build.optional.OptionalDependenciesPlugin"
		}
		starterPlugin {
			id = "org.springframework.boot.starter"
			implementationClass = "org.springframework.boot.build.starters.StarterPlugin"
		}
		testFailuresPlugin {
			id = "org.springframework.boot.test-failures"
			implementationClass = "org.springframework.boot.build.testing.TestFailuresPlugin"
		}
	}
}

test {
	useJUnitPlatform()
}
